import heapq

class ListNode:
    def __init__(self, val=0, next=None):
        self.val = val
        self.next = next

   
    def __lt__(self, other):
        return self.val < other.val

def mergeKLists(lists):
    
    heap = []
    
   
    for i in range(len(lists)):
        if lists[i]:
            heapq.heappush(heap, (lists[i].val, i, lists[i]))
    
 
    dummy = ListNode()
    current = dummy
    
    while heap:
     
        val, idx, node = heapq.heappop(heap)
        
      
        current.next = node
        current = current.next
        
    
        if node.next:
            heapq.heappush(heap, (node.next.val, idx, node.next))
    
    return dummy.next
